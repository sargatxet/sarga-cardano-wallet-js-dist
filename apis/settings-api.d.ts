/**
 * Cardano Wallet Backend API
 * <p align=\"right\"><img style=\"position: relative; top: -10em; margin-bottom: -12em;\" width=\"20%\" src=\"https://cardanodocs.com/img/cardano.png\"></img></p>
 *
 * OpenAPI spec version: 2021.3.4
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { ApiSettingsPutData } from '../models';
import { ApiGetSettings } from '../models';
/**
 * SettingsApi - axios parameter creator
 * @export
 */
export declare const SettingsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * <p align=\"right\">status: <strong>stable</strong></p>  Return the current settings.
     * @summary Get settings
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSettings: (options?: any) => Promise<RequestArgs>;
    /**
     * <p align=\"right\">status: <strong>stable</strong></p>  Overwrite current settings.
     * @summary Update settings
     * @param {ApiSettingsPutData} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putSettings: (body: ApiSettingsPutData, options?: any) => Promise<RequestArgs>;
};
/**
 * SettingsApi - functional programming interface
 * @export
 */
export declare const SettingsApiFp: (configuration?: Configuration) => {
    /**
     * <p align=\"right\">status: <strong>stable</strong></p>  Return the current settings.
     * @summary Get settings
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSettings(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ApiGetSettings>>;
    /**
     * <p align=\"right\">status: <strong>stable</strong></p>  Overwrite current settings.
     * @summary Update settings
     * @param {ApiSettingsPutData} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putSettings(body: ApiSettingsPutData, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * SettingsApi - factory interface
 * @export
 */
export declare const SettingsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * <p align=\"right\">status: <strong>stable</strong></p>  Return the current settings.
     * @summary Get settings
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSettings(options?: any): AxiosPromise<ApiGetSettings>;
    /**
     * <p align=\"right\">status: <strong>stable</strong></p>  Overwrite current settings.
     * @summary Update settings
     * @param {ApiSettingsPutData} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putSettings(body: ApiSettingsPutData, options?: any): AxiosPromise<void>;
};
/**
 * SettingsApi - object-oriented interface
 * @export
 * @class SettingsApi
 * @extends {BaseAPI}
 */
export declare class SettingsApi extends BaseAPI {
    /**
     * <p align=\"right\">status: <strong>stable</strong></p>  Return the current settings.
     * @summary Get settings
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SettingsApi
     */
    getSettings(options?: any): Promise<import("axios").AxiosResponse<ApiGetSettings>>;
    /**
     * <p align=\"right\">status: <strong>stable</strong></p>  Overwrite current settings.
     * @summary Update settings
     * @param {ApiSettingsPutData} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SettingsApi
     */
    putSettings(body: ApiSettingsPutData, options?: any): Promise<import("axios").AxiosResponse<void>>;
}
