/**
 * Cardano Wallet Backend API
 * <p align=\"right\"><img style=\"position: relative; top: -10em; margin-bottom: -12em;\" width=\"20%\" src=\"https://cardanodocs.com/img/cardano.png\"></img></p>
 *
 * OpenAPI spec version: 2021.3.4
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { ApiPostAccountKeyData } from '../models';
/**
 * KeysApi - axios parameter creator
 * @export
 */
export declare const KeysApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * <p align=\"right\">status: <strong>stable</strong></p> Return a public key for a given role and derivation index.  <b>Note:</b> Only `Soft` indexes are supported by this endpoint.
     * @summary Get Public Key
     * @param {string} walletId
     * @param {string} role
     * @param {string} index
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWalletKey: (walletId: string, role: string, index: string, options?: any) => Promise<RequestArgs>;
    /**
     * <p align=\"right\">status: <strong>stable</strong></p> Retrieve account public key from the wallet.  <b>Note:</b> Only `Hard` indexes are supported by this endpoint.
     * @summary Create
     * @param {ApiPostAccountKeyData} body
     * @param {string} walletId
     * @param {string} index
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postAccountKey: (body: ApiPostAccountKeyData, walletId: string, index: string, options?: any) => Promise<RequestArgs>;
};
/**
 * KeysApi - functional programming interface
 * @export
 */
export declare const KeysApiFp: (configuration?: Configuration) => {
    /**
     * <p align=\"right\">status: <strong>stable</strong></p> Return a public key for a given role and derivation index.  <b>Note:</b> Only `Soft` indexes are supported by this endpoint.
     * @summary Get Public Key
     * @param {string} walletId
     * @param {string} role
     * @param {string} index
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWalletKey(walletId: string, role: string, index: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     * <p align=\"right\">status: <strong>stable</strong></p> Retrieve account public key from the wallet.  <b>Note:</b> Only `Hard` indexes are supported by this endpoint.
     * @summary Create
     * @param {ApiPostAccountKeyData} body
     * @param {string} walletId
     * @param {string} index
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postAccountKey(body: ApiPostAccountKeyData, walletId: string, index: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
};
/**
 * KeysApi - factory interface
 * @export
 */
export declare const KeysApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * <p align=\"right\">status: <strong>stable</strong></p> Return a public key for a given role and derivation index.  <b>Note:</b> Only `Soft` indexes are supported by this endpoint.
     * @summary Get Public Key
     * @param {string} walletId
     * @param {string} role
     * @param {string} index
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWalletKey(walletId: string, role: string, index: string, options?: any): AxiosPromise<string>;
    /**
     * <p align=\"right\">status: <strong>stable</strong></p> Retrieve account public key from the wallet.  <b>Note:</b> Only `Hard` indexes are supported by this endpoint.
     * @summary Create
     * @param {ApiPostAccountKeyData} body
     * @param {string} walletId
     * @param {string} index
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postAccountKey(body: ApiPostAccountKeyData, walletId: string, index: string, options?: any): AxiosPromise<string>;
};
/**
 * KeysApi - object-oriented interface
 * @export
 * @class KeysApi
 * @extends {BaseAPI}
 */
export declare class KeysApi extends BaseAPI {
    /**
     * <p align=\"right\">status: <strong>stable</strong></p> Return a public key for a given role and derivation index.  <b>Note:</b> Only `Soft` indexes are supported by this endpoint.
     * @summary Get Public Key
     * @param {string} walletId
     * @param {string} role
     * @param {string} index
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KeysApi
     */
    getWalletKey(walletId: string, role: string, index: string, options?: any): Promise<import("axios").AxiosResponse<string>>;
    /**
     * <p align=\"right\">status: <strong>stable</strong></p> Retrieve account public key from the wallet.  <b>Note:</b> Only `Hard` indexes are supported by this endpoint.
     * @summary Create
     * @param {ApiPostAccountKeyData} body
     * @param {string} walletId
     * @param {string} index
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KeysApi
     */
    postAccountKey(body: ApiPostAccountKeyData, walletId: string, index: string, options?: any): Promise<import("axios").AxiosResponse<string>>;
}
